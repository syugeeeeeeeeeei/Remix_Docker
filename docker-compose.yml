services:
  remix:
    build:
      context: .
      dockerfile: ./packages/remix/Dockerfile
    container_name: remix
    restart: unless-stopped
    networks:
      - app_network
    depends_on:
      - api
    environment:
      - API_BASE_URL=http://api:3000

  api:
    build:
      context: .
      dockerfile: ./packages/api/Dockerfile
    container_name: api
    restart: unless-stopped
    networks:
      - app_network
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: